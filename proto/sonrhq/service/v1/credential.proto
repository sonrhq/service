syntax = "proto3";
package sonrhq.service.v1;

option go_package = "github.com/sonrhq/service";

// Credential is a message type that contains all needed information
// about a WebAuthn credential for storage.
message Credential {
  // id is a probabilistically-unique byte sequence identifying a public key
  // credential source and its authentication assertions.
  bytes id = 1;

  // public_key is the public key portion of a Relying Party-specific credential
  // key pair, generated by an authenticator and returned to a Relying Party at
  // registration time.
  bytes public_key = 2;

  // attestation_type is the attestation format used (if any) by the
  // authenticator when creating the credential.
  string attestation_type = 3;

  // transport is the transports used by the authenticator when creating the
  // credential.
  repeated string transport = 4;

  // Authenticator is the Authenticator information for a given certificate.
  Authenticator authenticator = 5;

  // controller is the DID Controller of the credential.
  string controller = 6;
}

// Authenticator is a message type that contains certificate information
// about a WebAuthn authenticator.
message Authenticator {
  // aaguid is the AAGUID of the authenticator. An AAGUID is defined as an array
  // containing the globally unique identifier of the authenticator model being
  // sought.
  bytes aaguid = 1;

  // sign_count is the SignCount -Upon a new login operation, the Relying Party
  // compares the stored signature counter value with the new signCount value
  // returned in the assertionâ€™s authenticator data.
  uint32 sign_count = 2;

  // attachment is a signal that the authenticator may be cloned, i.e. at
  // least two copies of the credential private key may exist and are being used
  // in parallel.
  string attachment = 3;
}
